<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pknu.blog.dao.MainDao">

	<resultMap type="com.pknu.blog.dto.MemberDto" id="memberMap">
		<id property="userId" column="userid"/>
		<result property="userId" column="userid"/>
		<result property="userPw" column="userpw"/>
		<result property="userName" column="username"/>
		<result property="enabled" column="enabled"/>
		<result property="regdate" column="regdate"/>
		<result property="updateDate" column="updatedate"/>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	<resultMap type="com.pknu.blog.dto.MemberAuthDto" id="authMap">
		<result property="userId" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<resultMap type="com.pknu.blog.dto.BoardFileDto" id="FileMap">
		<id property="boardNum" column="boardNum"/>
		<result property="fileNum" column="FILENUM"/>
		<result property="boardNum" column="BOARDNUM"/>
		<result property="original_File_Name" column="ORIGINAL_FILE_NAME"/>
		<result property="stored_File_Name" column="STORED_FILE_NAME"/>
		<result property="file_Size" column="FILE_SIZE"/>
		<result property="filePath" column="FILEPATH"/>
		<result property="url" column="URL"/>
	</resultMap>
	
	<select id="read" resultMap="memberMap">
		select mem.userid,userpw,username,enabled,regdate,updatedate,auth
		from member mem LEFT OUTER JOIN member_auth auth on mem.userid=auth.userid
		where mem.userid=#{userId}
	</select>
	
	<select id="getTotla" resultType="int">
		select count(*)
		from board
	</select>
	
	
	<select id="getBoard" parameterType="criteria" resultType="boardDto">
		select b.BOARDNUM,b.BOARDTITLE,b.SIDETITLE,b.BOARDCONTENT,b.BOARDDATE,b.USERID,b.USERNAME,b.CATEGORY,b.VIEWCOUNT,bfile.url
		from board b left outer join board_file bfile on b.boardnum=bfile.boardnum
		group by b.BOARDNUM
		order by b.BOARDNUM desc
		limit #{pageStart},#{amount}
	</select>
	
	<select id="getContent" parameterType="int" resultType="boardDto">
		select * 
		from board
		where BOARDNUM=#{boardNum}
	</select>
	
	<select id="selectName" parameterType="String" resultType="String">
		select USERNAME
		from member
		where USERID=#{userId}
	</select>
	
	<insert id="insertSelectKey" parameterType="boardDto">
		insert into board(BOARDTITLE,BOARDCONTENT,SIDETITLE,USERID,USERNAME,CATEGORY) 
		values(#{boardTitle},#{boardContent},#{sideTitle},#{userId},#{userName},#{category})
		<selectKey resultType="int"  keyProperty="boardNum" order="AFTER" keyColumn="BOARDNUM">
			select LAST_INSERT_ID() 
			from DUAL
		</selectKey>
	</insert>
	
	<select id="getBoardEdit" parameterType="boardDto" resultType="boardDto">
		select *
		from board
		where BOARDNUM=#{boardNum}
	</select>
	
	<select id="getAttachEdit" resultMap="FileMap">
		select FILENUM,BOARDNUM,ORIGINAL_FILE_NAME,STORED_FILE_NAME,FILE_SIZE,FILEPATH,URL
		from board_file
		where BOARDNUM=#{boardNum}
	</select>
	
	<select id="serchList" parameterType="criteria" resultType="boardDto">
		select b.BOARDNUM,b.BOARDTITLE,b.SIDETITLE,b.BOARDCONTENT,b.BOARDDATE,b.USERID,b.USERNAME,b.CATEGORY,b.VIEWCOUNT,bfile.url
		from board b left outer join board_file bfile on b.boardnum=bfile.boardnum
		where
		<include refid="search"></include>
		group by b.BOARDNUM
		order by b.BOARDNUM desc
		limit #{pageStart},#{amount}
	</select>
	
	<select id="serchCount" parameterType="criteria" resultType="int">
		select count(BOARDNUM)
		from board
		where
		<include refid="search"/>
	</select>
	
	<select id="IdFind" parameterType="String" resultType="int">
		select count(userid)
		from member
		where userid=#{username}
	</select>
	
	<select id="checkUsername" parameterType="map" resultType="int">
		<![CDATA[
			select count(*)
			from uuidUrl
			where userid=#{username}&&uuid=#{uuid}
		]]>

	</select>
	<select id="tagTotal" parameterType="criteria" resultType="int">
		select count(*)
		from board
		where CATEGORY=#{category}
	</select>
	
	<select id="tagList" parameterType="criteria" resultType="boardDto">
		select b.BOARDNUM,b.BOARDTITLE,b.SIDETITLE,b.BOARDCONTENT,b.BOARDDATE,b.USERID,b.USERNAME,b.CATEGORY,b.VIEWCOUNT,bfile.url
		from board b left outer join board_file bfile on b.boardnum=bfile.boardnum
		where CATEGORY=#{category}
		group by b.BOARDNUM
		order by b.BOARDNUM desc
		limit #{pageStart},#{amount}
	</select>
	
	<update id="passReset" parameterType="map">
		UPDATE member
		set userpw=#{Encoder}
		where userid=#{username}
	</update>
	<delete id="deleteUUID" parameterType="map">
		DELETE
		FROM uuidUrl
		WHERE userid=#{username}
	</delete>
	
	<insert id="uuidInsert" parameterType="map">
		insert into uuidUrl(userid,uuid)
		values(#{username},#{uuid})
	</insert>
	
	<insert id="insertAttach" parameterType="boardFileDto">
		insert into board_file(BOARDNUM,ORIGINAL_FILE_NAME,STORED_FILE_NAME,FILE_SIZE,FILEPATH,URL)
		values(#{boardNum},#{original_File_Name},#{stored_File_Name},#{file_Size},#{filePath},#{url})
	</insert>
	
	<update id="viewUp" parameterType="int">
			UPDATE board
			SET ViewCount=ViewCount+1
			WHERE BOARDNUM=#{boardNum}
	</update>
	
	<update id="boardModify" parameterType="boardDto">
		UPDATE board
		set BOARDTITLE=#{boardTitle},SIDETITLE=#{sideTitle},BOARDCONTENT=#{boardContent},USERID=#{userId},USERNAME=#{userName},CATEGORY=#{category}
		where BOARDNUM=#{boardNum}
	</update>
	
	<delete id="boardDelete" parameterType="int">
		delete
		from board
		where BOARDNUM=#{boardNum};
	</delete>
	
	<insert id="memberSing" parameterType="map">
		insert into member(userid,userpw,username) values(#{memberDto.userId},#{memberDto.userPw},#{memberDto.userName})
	</insert>
	<insert id="memberAuth" parameterType="map">
		insert into member_auth(userid,auth) values(#{memberAuthDto.userId},#{memberAuthDto.auth})
	</insert>
	
	<sql id="search">
		<trim prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<choose>
					<when test="type=='T'.toString()">
						OR BOARDTITLE LIKE concat('%',#{keyword},'%')
					</when>
					
					<when test="type=='C'.toString()">
						OR BOARDCONTENT LIKE concat('%',#{keyword},'%')
					</when>
					
					<when test="type=='W'.toString()">
						OR USERNAME LIKE concat('%',#{keyword},'%')
					</when>
				</choose>
			</foreach>
		</trim>
	</sql>
	
</mapper>